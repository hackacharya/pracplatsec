Issue Type,Project Key,Summary,Description,Category,Priority,Labels
Task,PLATSEC,"Remove any and all make/model/version numbers from login pages, unauthenticated public access pages, login prompts, network issue texts of all third-party software that you may be using.",,General,1,PracPlatSec
Task,PLATSEC,"Stop checking-in SECRETS/PASSWORDS/Certificates/Private Keys into your source code repositories. Use passbolt/vault or equivalent.,,General,1,PracPlatSec
Task,PLATSEC,"Implement or enable audit and access logging for all systems that allow a login.",,General,1,PracPlatSec
Task,PLATSEC,"Run separated Dev, Staging, Production environments, preferably with no direct network connectivity between them.",,General,1,PracPlatSec
Task,PLATSEC,"When using self signed certificates, Create and use separate root CAs and corresponding trust-chains for each environment and do not trust development, staging signers/CAs in production and vice versa.",,General,1,PracPlatSec
Task,PLATSEC,"For non-browser client applications that connect to your services always use certificate key pinning. That is to say,  build-in a set of trusted CA public keys in your application code and ensure that the CA chain is used for all connections at your service. You may need more than a couple of keys in case you need to rotate the certificates or decommission CAs.",,General,1,PracPlatSec
Task,PLATSEC,"When connecting to external third-party services, enable OCSP (Certificate Status) checks on the client pods, software, wherever possible. In programmed code implement/enable OCSP checks. Check your third party software configuration and enable OCSP  ",,General,1,PracPlatSec
Task,PLATSEC,"Disable all automatic software/module updates from internet third party / open source repositories.",,Thirdparty and Opensource,1,PracPlatSec
Task,PLATSEC,"Establish a process for periodic review of third party CVCEs and updates to this software modules.",,Thirdparty and Opensource,1,PracPlatSec
Task,PLATSEC,"Ensure that your build system can complete a full build and produce artefacts without any access to the internet. This may sound oxymoronic to modern programming paradigms, and this may also mean maintaining copies of the right forked versions of third party or open source code inside your corporate repos and keeping them up to date.",,Thirdparty and Opensource,  1,PracPlatSec
Task,PLATSEC,"Build all open source third party code from labelled sources yourself. Try to avoid using pre-built binaries, wherever possible.",,Thirdparty and Opensource,  1,PracPlatSec
Task,PLATSEC,"For all open source / third party software images/containers deployed - always maintain the version numbers easily accessible along with their licences. This should include anything pulled by imports such as -  go imports, maven imports, npm, reactjs, vue-js dependencies etc.",,Thirdparty and Opensource, 1,PracPlatSec
Task,PLATSEC,"Ensure your build system can produce EXACTLY the same artefacts for every build, if there are no commits to your codebase and no changes to the build system (AKA ensure there are no unintended pulls/upgrades to imported, third party modules, dependencies during the build process)  ",,Thirdparty and Opensource, 1,PracPlatSec
Task,PLATSEC,"Avoid unintended DNS leaks, Ensure all internal names are resolved internally. Avoid DNS poisoning issues.",,Infrastructure-DNS,1,PracPlatSec
Task,PLATSEC,"Avoid DNS leaks in development servers and development PCs also.",,Infrastructure-DNS,1,PracPlatSec
Task,PLATSEC,"Stop configuring public DNS servers like 4.4.4.4, 8.8.8.8 etc on all your vms, pods and container images. Allow the containers to use the k8s-DNS. Allow k8s DNS to point to a  filtering outbound DNS proxy centrally in your cluster. Manage the external DNS that you want to use centrally.",,Infrastructure-DNS,1,PracPlatSec
Task,PLATSEC,"Enable category, IP, reputation, and geography based DNS filters on your filtering DNS proxy.   ",,Infrastructure-DNS,1,PracPlatSec
Task,PLATSEC,"Cloudflare and several other vendors offer services that cater to this need  ",,Infrastructure-DNS,1,PracPlatSec
Task,PLATSEC,"Add Certification Authority Authorization CAA records on your DNS for your domains where they have publicly exposed services that your client applications connect to.",,Infrastructure-DNS,1,PracPlatSec
Task,PLATSEC,"Consider adding DNSSEC records for your domain name - if you're a web-based service.   ",,Infrastructure-DNS,1,PracPlatSec
Task,PLATSEC,"Ensure SPF and DMARC records are configured properly on your DNS. Ensure DKIM keys are configured on your system.",,Infrastructure-DNS,1,PracPlatSec
Task,PLATSEC,"Update DNS configuration to limit recursion/forwarding.",,Infrastructure-DNS,1,PracPlatSec
Task,PLATSEC,"Limit the subnets/source Ips that an internal DNS server responds to  ",,Infrastructure-DNS,1,PracPlatSec
Task,PLATSEC,"Disable DNS 'updates' where not necessary.",,Infrastructure-DNS,1,PracPlatSec
Task,PLATSEC,"Have an automated/robust process to renew DNS domain names.",,Infrastructure-DNS,1,PracPlatSec
Task,PLATSEC,"Where possible use an internal NTP Secondary within your cluster.   ",,Infrastructure-DNS,1,PracPlatSec

Task,PLATSEC,"Turn off automatic software updates on all production servers. But selectively enable only automatic security patching on your systems.",, Servers, 1,PracPlatSec
Task,PLATSEC,"Deploy endpoint monitoring agent and a syslog forwarding agents on all your servers and ensure they start at boot time and they actively send data out to a central monitoring system.",, Servers, 1,PracPlatSec
Task,PLATSEC,"Disallow SSH forwarding, disallow root logins from remote (Use console), disallow empty passwords, Remove any login prompt/issue text exposing OS and kernel version on your servers.   ",, Servers, 1,PracPlatSec
Task,PLATSEC,"Disallow/Do not accept any old ciphers such as CBC (instead use AES+GCM) and old hashes such as MD5, SHA1 etc in the SSH, Webserver TLS configurations.	Ensure this is done in programmed server/client code also.",, Servers, 1,PracPlatSec

Task,PLATSEC,"Stop  exposing kubernetes control planes and dashboards of dev/test systems to everyone on the internet.  Use VPNs via a bastion host to your control plane. Use IP Whitelists.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Enable HTTPS for kubernetes API server access for development, staging, production.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Allow only authenticated access   ",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Allow only a small set of well known IP addresses that you control as WHITELISTED/Allowed source IP address for  the kubernetes api-server access,.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Automate configuration of this Source IP whitelist for  kubernetes API IP addresses on nodes running your kubernetes.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Ensure Source IPs in the WHitelist are from a RESERVED IP pool if using public cloud.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Add source IP WHITELISTS for  any Kubernetes dashboard software for kubernetes.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Ensure that all kubernetes service configuration files,  configuration files, run time data directories in the master and slave nodes are only read/writeable by the owner. Normally this owner will be 'root' user.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Implement role based access control on your kubernetes cluster, allow only explicitly authorised users to access functions/apis.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Disable debug, exec, interactive shell etc on your production pods.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Do not share kubernetes keys/tokens for API/ CLI access across users, use separate user identities with different roles. Where possible avoid using permanent tokens, use sso logins for kubernetes API access. Enable token expiry.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Ensure any kubeconfig files are readable/writable only by owner (in most cases case root user). These may contain tokens.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Ensure that kubernetes is configured to lookup service accounts when authenticating with tokens always. This may slow down requests a bit but handle deleted accounts before expiry properly.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Integrate kubernetes API server authentication with your enterprise directory using Open ID connect / Oauth / SAML mechanisms and define proper access group/role/policies on the directory provider/identity provider server.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Enable kubernetes API rate limiting and configure limits to a value that is acceptable for your normal usage.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Implement or enable audit and access logging kubernetes API servers. Implement proper log rotation, compression and archival and purge policies wherever logs are generated.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Enable Encryption at rest for Kubernetes confidential data such as kubernetes Secrets. Your platform provider may provide KMS systems and encryption providers to achieve this.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Separate logically different functions into different kubernetes namespaces with no connectivity between them.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Avoid running production, development, staging containers on the same kubernetes cluster. Use separate kubernetes clusters for this purpose.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Implement a kubernetes validation/admission/policy hook to minimally validate atleast the 'source' base URL for container images. This will ensure that your kubernetes instances only pulls containers from KNOWN URls and there are no accidents.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"For sensitive private container images use AlwaysPull policy so that the cached container images cannot be used to start pods by others on the node. Note that this may slow down startup of containers.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"By default do not allow users to expose external Load Balancers to their pods, allow them to use only ClusterIP or node IP.   ",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Implement a process for upgrading kubernetes itself, or test this process if using public cloud.",,Kubernetes,1,PracPlatSec
Task,PLATSEC,"Implement/Enable audit logging of all Service-Account/Token usage and send these to the centralised logging/event management system.",,Kubernetes,1,PracPlatSec

Task,PLATSEC,"Implement/Enable Mutual TLS (client cert verification and server cert verification) between the kubernetes nodes by using client certificates on all nodes that connect to the master.",,Kubernetes Nodes,1,PracPlatSec
Task,PLATSEC,"Consider using your own CAs for your cluster and verify server and client certificates. Some systems do not allow a way to revoke certificates in these cases avoid using client certificates.",,Kubernetes Nodes,1,PracPlatSec
Task,PLATSEC,"Separate and tag/taint nodes as those having outbound internet access and those that do not.",,Kubernetes Nodes,1,PracPlatSec
Task,PLATSEC,"Disable node ssh and/or permit it only for a very select set of user roles.",,Kubernetes Nodes,1,PracPlatSec
Task,PLATSEC,"Stop using common/shared login accounts for remote shells/accesses.",,Kubernetes Nodes,1,PracPlatSec
Task,PLATSEC,"Where possible allow only whitelisted source IPs to be able to ssh into the host nodes.",,Kubernetes Nodes,1,PracPlatSec

Task,PLATSEC,"Run pods that do not require internet on nodes with no internet only.",,Kubernetes Pods,1,PracPlatSec
Task,PLATSEC,"Other than DNS,NTP ideally no pod should need any other internet access. If local subnet servers are used for DNS and NTP - then even this should not be required.",,Kubernetes Pods,1,PracPlatSec
Task,PLATSEC,"If only KNOWN internet destinations are accessed by pods  implement a forward  proxy  or outbound proxy or egress gateway that allows only those destinations or IP addresses.",,Kubernetes Pods,1,PracPlatSec
Task,PLATSEC,"Implement Kubernetes NetworkPolicies, enable Egress and Ingress pod isolation by default. Prevent internet access or cross cluster access or cross namespace access for pods that do not require this. Use pod/namespace selector matches for these  network policies.",,Kubernetes Pods,1,PracPlatSec
Task,PLATSEC,"Implement Pod Security Policy for all pods, avoid defaults.",,Kubernetes Pods,1,PracPlatSec
Task,PLATSEC,"Use least privileges for your pods  ",,Kubernetes Pods,1,PracPlatSec
Task,PLATSEC,"By default disallow access to host network, host ipc, and host process namespaces for pods  ",,Kubernetes Pods,1,PracPlatSec
Task,PLATSEC,"Avoid Host path access to pods wherever possible.",,Kubernetes Pods,1,PracPlatSec
Task,PLATSEC,"Ensure allowedCapabilities property is set properly and limited to only what the pods need. Explicitly requesting required minimal set of capabilities is always better than using defaults.",,Kubernetes Pods,1,PracPlatSec
Task,PLATSEC,"Ensure all Pods have CPU and memory resource limits where practical to avoid them overwhelming the cluster.",,Kubernetes Pods,1,PracPlatSec
Task,PLATSEC,"Ensure all pod logs are to your favourite centralised monitored logging/alerting system, ensure these logs are sent securely. (syslog tls etc)  ",,Kubernetes Pods,1,PracPlatSec
Task,PLATSEC,"Implement Mutual TLS (Client cert and Server cert verification) between the applications running on all pods even if the communication is internal.",,Kubernetes Pods,1,PracPlatSec

Task,PLATSEC,"Implement separate Dev and Production Artefact/Container Registries.",,Container Images,1,PracPlatSec
Task,PLATSEC,"Sign container images/image hashes with specific  private keys and trust only those in your operations code. Secure these keys.",,Container Images,1,PracPlatSec
Task,PLATSEC,"See if GKE binary code authorization or a similar mechanism is useful   ",,Container Images,1,PracPlatSec
Task,PLATSEC,"Implement user authentication for Push and Pull requests on your registries.    ",,Container Images,1,PracPlatSec
Task,PLATSEC,"Implement separated keys/tokens/service-accounts based authorization for push requests and for pull requests on your registry.",,Container Images,1,PracPlatSec
Task,PLATSEC,"Implement different registry access keys/tokens/service-accounts across Dev, Staging and Production",,Container Images,1,PracPlatSec
Task,PLATSEC,"Ensure that there is a mechanism in place to invalidate static keys/tokens that are issued to systems/or users for API access.",,Container Images,1,PracPlatSec
Task,PLATSEC,"Remove any make/model/version displays on the registry control panels, login pages.",,Container Images,1,PracPlatSec
Task,PLATSEC,"Separate Code/Manifests, Config/Cluster-specific-values, Secrets/Credentials wherever possible.",,Container Images,1,PracPlatSec
Task,PLATSEC,"Remove all SECRETS/PASSWORDs/Private Keys from container images. Even for dev and test images.",,Container Images,1,PracPlatSec
Task,PLATSEC,"Deliver Passwords/Secrets/Certificates/Private Keys to a container only via a keyphrase store such as an external Vault or local  kubernetes secrets/sealed secrets (also see kubernetes encryption at rest).",,Container Images,1,PracPlatSec
Task,PLATSEC,"Ensure that only a selected list of people with the right authorization are allowed access to view kubernetes secrets.",,Container Images,1,PracPlatSec
Task,PLATSEC,"Remove any registry / push pull tokens/secrets  into any container images.",,Container Images,1,PracPlatSec
Task,PLATSEC,"Run VA scans such as Snyk on all your container images, continuously - as part of your CI/CD cycle.",,Container Images,1,PracPlatSec
Task,PLATSEC,"Avoid exposing registries over the internet, use Private 'internal' IPs to pull from registries.",,Container Images,1,PracPlatSec
Task,PLATSEC,"Run scans during regular development on a daily basis on your containers",,Container Images,1,PracPlatSec
Task,PLATSEC,"Scout, Snyk, Google Vulnerability Scan etc  ",,Container Images,1,PracPlatSec
Task,PLATSEC,"Disable Auto-update, motd, release check and such services from your container images.",,Container Images,1,PracPlatSec
Task,PLATSEC,"Ensure all container images have process starts that will run as a non-ROOT user (Run as USER tag), unless absolutely necessary otherwise.",,Container Images,1,PracPlatSec
Task,PLATSEC,"Consider having a trust chain (ca-certificates) on all container images you build that contains only the certificates signed by your private CA. This will ensure that the pods will not connect to any man-in-the-middle server posing as your service.",,Container Images,1,PracPlatSec
Task,PLATSEC,"For all other cases keep the ca-certificate chain regularly updated and secure. (ubuntu update-ca-certificates)",,Container Images,1,PracPlatSec
Task,PLATSEC,"Use the 'USER" command in your DOckerfiles. Avoid running processes as root unless absolutely required.",,Container Images,1,PracPlatSec
Task,PLATSEC,"Implement Mutual TLS Server Authentication and Client Authentication even for internal pod to pod communication.",,Applications,1,PracPlatSec
Task,PLATSEC,"Only allow 'intended' client applications to be able to connect to server applications, (client cert/client subject name based authorization)",,Applications,1,PracPlatSec
